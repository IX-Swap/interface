name: Release - build & deploy

on:
  push:
    branches:
      - main
      - ci-dev

jobs:
  bump_version:
    name: Bump Version
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.github_tag_action.outputs.new_tag }}
      changelog: ${{ steps.github_tag_action.outputs.changelog }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Bump version and push tag
        id: github_tag_action
        uses: mathieudutour/github-tag-action@331898d5052eedac9b15fec867b5ba66ebf9b692
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: .*

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: bump_version
    if: ${{ needs.bump_version.outputs.new_tag != null }}
    steps:
      - name: Diplay environments
        run: env

      #      - name: Config terraform
      #        run: |
      #          mkdir $HOME/terraform/  && \
      #          curl  -v -k -L https://releases.hashicorp.com/terraform/0.12.26/terraform_0.12.26_linux_amd64.zip -o  $HOME/terraform/terraform_0.12.26_linux_amd64.zip  && \
      #          unzip  $HOME/terraform/terraform_0.12.26_linux_amd64.zip -d  $HOME/terraform/  && \
      #          cp -fv $HOME/terraform/terraform /usr/local/bin/  && \
      #          terraform --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Checkout
        uses: actions/checkout@v2

      - name: Add .env infrastructure variables # ${{ secrets.ENVPRODUCTION }} must be without spaces
        run: |
          echo''; echo " === echo secrets.ENVPRODUCTION === "
          echo "${{ secrets.ENVPRODUCTION }}"
          echo''; echo " === create .env === "
          echo '' > .env
          for (( n=0; n < ${#strarr[*]}; n++)); do echo "${strarr[n]}" >> .env; done
          echo '' >> .env
          source .env
          echo''; echo " === cat .env === "
          cat .env

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: 14.17
          registry-url: https://registry.npmjs.org

      - name: create .npmrc file
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc

      - name: Install dep's & build
        run: |
          export CI=false   && \
          yarn install --frozen-lockfile  &&\
          npm ls babel-loader
          yarn run build

      #      - name: Init terraform
      #        run: ./bin/tf-init.sh

      - name: Sync AWS S3 Bucket
        #        run: ./bin/s3-web-sync.sh
        run: |
          cd ./terraform && terraform init  && cd ../ && bucket_name=$(cd terraform && terraform output s3_bucket_id)
          aws s3 sync build/ s3://$bucket_name/ --acl public-read --delete
          aws s3api put-bucket-versioning --bucket $bucket_name --versioning-configuration Status=Enabled
          aws s3 website s3://$bucket_name/ --index-document index.html
          aws cloudfront create-invalidation --distribution-id $(cd terraform && terraform output cf_id) --paths "/*"

#      - name: Sync AWS S3 Bucket
#        uses: shallwefootball/s3-upload-action@master
#        with:
#          aws_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws_bucket: "s3-${var.ENVIRONMENT}-${var.AWS_APP_NAME}"
#          source_dir: 'build'
