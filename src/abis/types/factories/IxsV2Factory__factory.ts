/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type { IxsV2Factory, IxsV2FactoryInterface } from '../IxsV2Factory'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_feeToSetter',
        type: 'address'
      },
      {
        internalType: 'address',
        name: '_pairBytecodeProvider',
        type: 'address'
      }
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'oracle',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'tokenA',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'tokenB',
        type: 'address'
      }
    ],
    name: 'OracleUpdated',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'address',
        name: 'token0',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'token1',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'address',
        name: 'pair',
        type: 'address'
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    name: 'PairCreated',
    type: 'event'
  },
  {
    constant: true,
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    name: 'allPairs',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  },
  {
    constant: true,
    inputs: [],
    name: 'allPairsLength',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: 'tokenA',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'tokenB',
        type: 'address'
      },
      {
        internalType: 'bool',
        name: 'forceEnableMitigation',
        type: 'bool'
      }
    ],
    name: 'createPair',
    outputs: [
      {
        internalType: 'address',
        name: 'pair',
        type: 'address'
      }
    ],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    constant: true,
    inputs: [],
    name: 'defaultOracleStrategy',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  },
  {
    constant: true,
    inputs: [],
    name: 'feeTo',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  },
  {
    constant: true,
    inputs: [],
    name: 'feeToSetter',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  },
  {
    constant: true,
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      },
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    name: 'getPair',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  },
  {
    constant: true,
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    name: 'isPair',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  },
  {
    constant: true,
    inputs: [],
    name: 'oracle',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  },
  {
    constant: true,
    inputs: [
      {
        internalType: 'address',
        name: 'tokenA',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'tokenB',
        type: 'address'
      }
    ],
    name: 'oracleCanConsult',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  },
  {
    constant: true,
    inputs: [
      {
        internalType: 'address',
        name: 'tokenIn',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256'
      },
      {
        internalType: 'address',
        name: 'tokenOut',
        type: 'address'
      }
    ],
    name: 'oracleConsult',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: 'tokenA',
        type: 'address'
      },
      {
        internalType: 'address',
        name: 'tokenB',
        type: 'address'
      }
    ],
    name: 'oracleUpdate',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    constant: true,
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    name: 'oracles',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  },
  {
    constant: true,
    inputs: [],
    name: 'pairBytecodeProvider',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  },
  {
    constant: true,
    inputs: [],
    name: 'secFeeTo',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: '_feeTo',
        type: 'address'
      }
    ],
    name: 'setFeeTo',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: '_feeToSetter',
        type: 'address'
      }
    ],
    name: 'setFeeToSetter',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: '_oracle',
        type: 'address'
      },
      {
        internalType: 'bytes32',
        name: '_strategy',
        type: 'bytes32'
      }
    ],
    name: 'setOracle',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'bytes32',
        name: 'strategy',
        type: 'bytes32'
      }
    ],
    name: 'setOracleStrategy',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: '_secFeeTo',
        type: 'address'
      }
    ],
    name: 'setSecFeeTo',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    constant: false,
    inputs: [
      {
        internalType: 'address',
        name: '_wSecFactory',
        type: 'address'
      }
    ],
    name: 'setWSecFactory',
    outputs: [],
    payable: false,
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    constant: true,
    inputs: [],
    name: 'wSecFactory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  }
]

const _bytecode =
  '0x6080604052630747761760e41b60055534801561001b57600080fd5b506040516116eb3803806116eb8339818101604052604081101561003e57600080fd5b508051602090910151600280546001600160a01b039384166001600160a01b03199182161790915560048054939092169216919091179055611666806100856000396000f3fe608060405234801561001057600080fd5b50600436106101825760003560e01c8063a2e74af6116100d8578063d48545771161008c578063f46901ed11610066578063f46901ed1461044d578063f5575ba914610480578063f5c4e1e71461049d57610182565b8063d4854577146103d7578063e5e31b13146103df578063e6a439051461041257610182565b8063ac033bd9116100bd578063ac033bd91461034d578063c2f20d9d1461039c578063cd6c7305146103cf57610182565b8063a2e74af6146102fd578063a81a26771461033057610182565b80632584bc4f1161013a57806359df97061161011457806359df9706146102755780637dc0d1d0146102b057806382dfdce4146102b857610182565b80632584bc4f1461023257806329fd286a1461023a578063574f2ba31461026d57610182565b8063094b74151161016b578063094b7415146101d25780631975f059146101da5780631e3dd18b1461021557610182565b8063017e7e5814610187578063034ff411146101b8575b600080fd5b61018f6104e0565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101c06104fc565b60408051918252519081900360200190f35b61018f610502565b610213600480360360408110156101f057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561051e565b005b61018f6004803603602081101561022b57600080fd5b503561068b565b61018f6106bf565b6102136004803603602081101561025057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166106db565b6101c06107a8565b6102136004803603604081101561028b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166107ae565b61018f610949565b61018f600480360360608110156102ce57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001351515610974565b6102136004803603602081101561031357600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610f51565b61018f6004803603602081101561034657600080fd5b503561101e565b6103886004803603604081101561036357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516611046565b604080519115158252519081900360200190f35b610213600480360360208110156103b257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611186565b61018f611274565b61018f611290565b610388600480360360208110156103f557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166112ac565b61018f6004803603604081101561042857600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160200135166112c1565b6102136004803603602081101561046357600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166112f4565b6102136004803603602081101561049657600080fd5b50356113c1565b6101c0600480360360608110156104b357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013591604090910135166114e9565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b60025473ffffffffffffffffffffffffffffffffffffffff1681565b60008161054b577f747761700000000000000000000000000000000000000000000000000000000061054d565b815b905060007f7477617000000000000000000000000000000000000000000000000000000000821480156105a5575060055460009081526006602052604090205473ffffffffffffffffffffffffffffffffffffffff16155b905080806105ca575060025473ffffffffffffffffffffffffffffffffffffffff1633145b61063557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f49787356323a20464f5242494444454e00000000000000000000000000000000604482015290519081900360640190fd5b50600090815260066020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff939093169290921790915550565b6009818154811061069857fe5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff16905081565b60035473ffffffffffffffffffffffffffffffffffffffff1681565b60025473ffffffffffffffffffffffffffffffffffffffff16331461076157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f49787356323a20464f5242494444454e00000000000000000000000000000000604482015290519081900360640190fd5b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60095490565b60055460009081526006602052604090205473ffffffffffffffffffffffffffffffffffffffff168061084257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f49787356323a204453575f4f5241434c455f4e4f545f53455400000000000000604482015290519081900360640190fd5b604080517fc640752d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152848116602483015291519183169163c640752d9160448082019260009290919082900301818387803b1580156108bb57600080fd5b505af11580156108cf573d6000803e3d6000fd5b505050508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fa18d4edc0f9c89f7feb41d0243d7f20bf44c5b426ede1cc1014a31ab8eb7248960405160405180910390a4505050565b60055460009081526006602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b60008273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610a1157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f49787356323a204944454e544943414c5f414444524553534553000000000000604482015290519081900360640190fd5b6000808473ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1610610a4e578486610a51565b85855b909250905073ffffffffffffffffffffffffffffffffffffffff8216610ad857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f49787356323a205a45524f5f4144445245535300000000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff828116600090815260076020908152604080832085851684529091529020541615610b7957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f49787356323a20504149525f4558495354530000000000000000000000000000604482015290519081900360640190fd5b6060600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f09400026040518163ffffffff1660e01b815260040160006040518083038186803b158015610be357600080fd5b505afa158015610bf7573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526020811015610c3e57600080fd5b8101908080516040519392919084640100000000821115610c5e57600080fd5b908301906020820185811115610c7357600080fd5b8251640100000000811182820188101715610c8d57600080fd5b82525081516020918201929091019080838360005b83811015610cba578181015183820152602001610ca2565b50505050905090810190601f168015610ce75780820380516001836020036101000a031916815260200191505b50604052505050905060008383604051602001808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140192505050604051602081830303815290604052805190602001209050808251602084016000f5604080517fe4bbb5a800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff87811660048301528681166024830152891515604483015291519297509087169163e4bbb5a89160648082019260009290919082900301818387803b158015610e0f57600080fd5b505af1158015610e23573d6000803e3d6000fd5b5050505073ffffffffffffffffffffffffffffffffffffffff84811660008181526007602081815260408084208987168086529083528185208054978d167fffffffffffffffffffffffff000000000000000000000000000000000000000098891681179091559383528185208686528352818520805488168517905560098054600181810183557f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af90910180549099168617909855848652600884529482902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016909717909655925483519283529082015281517f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9929181900390910190a3505050509392505050565b60025473ffffffffffffffffffffffffffffffffffffffff163314610fd757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f49787356323a20464f5242494444454e00000000000000000000000000000000604482015290519081900360640190fd5b600280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60066020526000908152604090205473ffffffffffffffffffffffffffffffffffffffff1681565b60055460009081526006602052604081205473ffffffffffffffffffffffffffffffffffffffff16806110da57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f49787356323a204453575f4f5241434c455f4e4f545f53455400000000000000604482015290519081900360640190fd5b604080517fe30910e800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8681166004830152858116602483015291519183169163e30910e891604480820192602092909190829003018186803b15801561115257600080fd5b505afa158015611166573d6000803e3d6000fd5b505050506040513d602081101561117c57600080fd5b5051949350505050565b60035473ffffffffffffffffffffffffffffffffffffffff1615806111c2575060025473ffffffffffffffffffffffffffffffffffffffff1633145b61122d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f49787356323a20464f5242494444454e00000000000000000000000000000000604482015290519081900360640190fd5b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60015473ffffffffffffffffffffffffffffffffffffffff1681565b60045473ffffffffffffffffffffffffffffffffffffffff1681565b60086020526000908152604090205460ff1681565b600760209081526000928352604080842090915290825290205473ffffffffffffffffffffffffffffffffffffffff1681565b60025473ffffffffffffffffffffffffffffffffffffffff16331461137a57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f49787356323a20464f5242494444454e00000000000000000000000000000000604482015290519081900360640190fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60025473ffffffffffffffffffffffffffffffffffffffff16331461144757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f49787356323a20464f5242494444454e00000000000000000000000000000000604482015290519081900360640190fd5b8015801590611479575060008181526006602052604090205473ffffffffffffffffffffffffffffffffffffffff1615155b6114e457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f49787356323a20454d5054595f4f5241434c455f535452415445475900000000604482015290519081900360640190fd5b600555565b60055460009081526006602052604081205473ffffffffffffffffffffffffffffffffffffffff168061157d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f49787356323a204453575f4f5241434c455f4e4f545f53455400000000000000604482015290519081900360640190fd5b604080517f8c86f1e400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8781166004830152602482018790528581166044830152915191831691638c86f1e491606480820192602092909190829003018186803b1580156115fc57600080fd5b505afa158015611610573d6000803e3d6000fd5b505050506040513d602081101561162657600080fd5b50519594505050505056fea265627a7a7231582095b7fdecf9aa4fb3056a29720429ca3b083c3e3bd1c3eadd4ba4eb80dbac1ee064736f6c63430005100032'

export class IxsV2Factory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(
    _feeToSetter: string,
    _pairBytecodeProvider: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IxsV2Factory> {
    return super.deploy(
      _feeToSetter,
      _pairBytecodeProvider,
      overrides || {}
    ) as Promise<IxsV2Factory>
  }
  getDeployTransaction(
    _feeToSetter: string,
    _pairBytecodeProvider: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _feeToSetter,
      _pairBytecodeProvider,
      overrides || {}
    )
  }
  attach(address: string): IxsV2Factory {
    return super.attach(address) as IxsV2Factory
  }
  connect(signer: Signer): IxsV2Factory__factory {
    return super.connect(signer) as IxsV2Factory__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): IxsV2FactoryInterface {
    return new utils.Interface(_abi) as IxsV2FactoryInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IxsV2Factory {
    return new Contract(address, _abi, signerOrProvider) as IxsV2Factory
  }
}
