/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers'
import { Provider, TransactionRequest } from '@ethersproject/providers'
import type {
  IxsV2SwapRouter,
  IxsV2SwapRouterInterface
} from '../IxsV2SwapRouter'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_factory',
        type: 'address'
      },
      {
        internalType: 'address',
        name: '_WETH',
        type: 'address'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    inputs: [],
    name: 'WETH',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true
  },
  {
    inputs: [],
    name: 'factory',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'reserveIn',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'reserveOut',
        type: 'uint256'
      },
      {
        internalType: 'bool',
        name: 'isSecurityPool',
        type: 'bool'
      }
    ],
    name: 'getAmountIn',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256'
      }
    ],
    stateMutability: 'pure',
    type: 'function',
    constant: true
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'reserveIn',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'reserveOut',
        type: 'uint256'
      },
      {
        internalType: 'bool',
        name: 'isSecurityPool',
        type: 'bool'
      }
    ],
    name: 'getAmountOut',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256'
      }
    ],
    stateMutability: 'pure',
    type: 'function',
    constant: true
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256'
      },
      {
        internalType: 'address[]',
        name: 'path',
        type: 'address[]'
      }
    ],
    name: 'getAmountsIn',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]'
      }
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256'
      },
      {
        internalType: 'address[]',
        name: 'path',
        type: 'address[]'
      }
    ],
    name: 'getAmountsOut',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]'
      }
    ],
    stateMutability: 'view',
    type: 'function',
    constant: true
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountA',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'reserveA',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'reserveB',
        type: 'uint256'
      }
    ],
    name: 'quote',
    outputs: [
      {
        internalType: 'uint256',
        name: 'amountB',
        type: 'uint256'
      }
    ],
    stateMutability: 'pure',
    type: 'function',
    constant: true
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256'
      },
      {
        internalType: 'address[]',
        name: 'path',
        type: 'address[]'
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'operator',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8'
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32'
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32'
          }
        ],
        internalType: 'struct IIxsV2Pair.SecAuthorization[]',
        name: 'authorizations',
        type: 'tuple[]'
      }
    ],
    name: 'swapETHForExactTokens',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]'
      }
    ],
    stateMutability: 'payable',
    type: 'function',
    payable: true
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountOutMin',
        type: 'uint256'
      },
      {
        internalType: 'address[]',
        name: 'path',
        type: 'address[]'
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'operator',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8'
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32'
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32'
          }
        ],
        internalType: 'struct IIxsV2Pair.SecAuthorization[]',
        name: 'authorizations',
        type: 'tuple[]'
      }
    ],
    name: 'swapExactETHForTokens',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]'
      }
    ],
    stateMutability: 'payable',
    type: 'function',
    payable: true
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountOutMin',
        type: 'uint256'
      },
      {
        internalType: 'address[]',
        name: 'path',
        type: 'address[]'
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'operator',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8'
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32'
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32'
          }
        ],
        internalType: 'struct IIxsV2Pair.SecAuthorization[]',
        name: 'authorizations',
        type: 'tuple[]'
      }
    ],
    name: 'swapExactETHForTokensSupportingFeeOnTransferTokens',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
    payable: true
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'amountOutMin',
        type: 'uint256'
      },
      {
        internalType: 'address[]',
        name: 'path',
        type: 'address[]'
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'operator',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8'
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32'
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32'
          }
        ],
        internalType: 'struct IIxsV2Pair.SecAuthorization[]',
        name: 'authorizations',
        type: 'tuple[]'
      }
    ],
    name: 'swapExactTokensForETH',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'amountOutMin',
        type: 'uint256'
      },
      {
        internalType: 'address[]',
        name: 'path',
        type: 'address[]'
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'operator',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8'
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32'
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32'
          }
        ],
        internalType: 'struct IIxsV2Pair.SecAuthorization[]',
        name: 'authorizations',
        type: 'tuple[]'
      }
    ],
    name: 'swapExactTokensForETHSupportingFeeOnTransferTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'amountOutMin',
        type: 'uint256'
      },
      {
        internalType: 'address[]',
        name: 'path',
        type: 'address[]'
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'operator',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8'
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32'
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32'
          }
        ],
        internalType: 'struct IIxsV2Pair.SecAuthorization[]',
        name: 'authorizations',
        type: 'tuple[]'
      }
    ],
    name: 'swapExactTokensForTokens',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountIn',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'amountOutMin',
        type: 'uint256'
      },
      {
        internalType: 'address[]',
        name: 'path',
        type: 'address[]'
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'operator',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8'
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32'
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32'
          }
        ],
        internalType: 'struct IIxsV2Pair.SecAuthorization[]',
        name: 'authorizations',
        type: 'tuple[]'
      }
    ],
    name: 'swapExactTokensForTokensSupportingFeeOnTransferTokens',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'amountInMax',
        type: 'uint256'
      },
      {
        internalType: 'address[]',
        name: 'path',
        type: 'address[]'
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'operator',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8'
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32'
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32'
          }
        ],
        internalType: 'struct IIxsV2Pair.SecAuthorization[]',
        name: 'authorizations',
        type: 'tuple[]'
      }
    ],
    name: 'swapTokensForExactETH',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'amountOut',
        type: 'uint256'
      },
      {
        internalType: 'uint256',
        name: 'amountInMax',
        type: 'uint256'
      },
      {
        internalType: 'address[]',
        name: 'path',
        type: 'address[]'
      },
      {
        internalType: 'address',
        name: 'to',
        type: 'address'
      },
      {
        internalType: 'uint256',
        name: 'deadline',
        type: 'uint256'
      },
      {
        components: [
          {
            internalType: 'address',
            name: 'operator',
            type: 'address'
          },
          {
            internalType: 'uint256',
            name: 'deadline',
            type: 'uint256'
          },
          {
            internalType: 'uint8',
            name: 'v',
            type: 'uint8'
          },
          {
            internalType: 'bytes32',
            name: 'r',
            type: 'bytes32'
          },
          {
            internalType: 'bytes32',
            name: 's',
            type: 'bytes32'
          }
        ],
        internalType: 'struct IIxsV2Pair.SecAuthorization[]',
        name: 'authorizations',
        type: 'tuple[]'
      }
    ],
    name: 'swapTokensForExactTokens',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'amounts',
        type: 'uint256[]'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    stateMutability: 'payable',
    type: 'receive',
    payable: true
  }
]

const _bytecode =
  '0x60c06040523480156200001157600080fd5b506040516200411838038062004118833981016040819052620000349162000053565b6001600160601b0319606092831b8116608052911b1660a052620000aa565b6000806040838503121562000066578182fd5b8251620000738162000091565b6020840151909250620000868162000091565b809150509250929050565b6001600160a01b0381168114620000a757600080fd5b50565b60805160601c60a05160601c613f90620001886000398061011452806107eb52806109e45280610ae25280610b615280610c105280610e415280610f4152806110d6528061116b52806115d65280611681528061170252806119f15280611b855280611c1a5280611df052508061033c52806103cf5280610478528061061e528061068b52806108c65280610b9a5280610cc75280610d345280610fec528061105652806112c552806117415280611a9c5280611b095280611ea75280611f14528061254252806125c552806129625280612d0b5250613f906000f3fe6080604052600436106100f75760003560e01c8063c45a01551161008a578063d2892ba311610059578063d2892ba3146102cf578063dd16dda3146102ef578063eaa35b6414610302578063f4b18277146103155761013d565b8063c45a015514610267578063c9534f671461027c578063cfffe4f31461029c578063d06ca61f146102af5761013d565b8063a6e5efc8116100c6578063a6e5efc8146101e5578063ac065c8214610205578063ad5c464814610225578063ad615dec146102475761013d565b80631f00ca74146101425780632e08a6ee1461017857806353388d8f146101a5578063a5ff0d12146101c55761013d565b3661013d573373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461013b57fe5b005b600080fd5b34801561014e57600080fd5b5061016261015d3660046135aa565b610335565b60405161016f9190613901565b60405180910390f35b34801561018457600080fd5b50610198610193366004613727565b61036b565b60405161016f9190613e0b565b3480156101b157600080fd5b506101626101c0366004613661565b610382565b3480156101d157600080fd5b506101986101e0366004613727565b6105cc565b3480156101f157600080fd5b50610162610200366004613661565b6105da565b34801561021157600080fd5b5061013b610220366004613661565b610799565b34801561023157600080fd5b5061023a610b5f565b60405161016f9190613889565b34801561025357600080fd5b506101986102623660046136fc565b610b83565b34801561027357600080fd5b5061023a610b98565b34801561028857600080fd5b50610162610297366004613661565b610bbc565b6101626102aa3660046134fd565b610f02565b3480156102bb57600080fd5b506101626102ca3660046135aa565b6112be565b3480156102db57600080fd5b5061013b6102ea366004613661565b6112eb565b61013b6102fd3660046134fd565b611599565b6101626103103660046134fd565b6119b2565b34801561032157600080fd5b50610162610330366004613661565b611d9c565b60606103627f00000000000000000000000000000000000000000000000000000000000000008484612022565b90505b92915050565b6000610379858585856121c4565b95945050505050565b606083428110156103c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613d1a565b60405180910390fd5b60006104377f00000000000000000000000000000000000000000000000000000000000000008a8a60008181106103fb57fe5b905060200201602081019061041091906133ed565b8b8b600181811061041d57fe5b905060200201602081019061043291906133ed565b6122be565b905060608989808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509293508e92506104a091507f000000000000000000000000000000000000000000000000000000000000000090508284612022565b94508b856000815181106104b057fe5b602002602001015111156104f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613c86565b50506105338989600081811061050257fe5b905060200201602081019061051791906133ed565b33838660008151811061052657fe5b602002602001015161234c565b6105be838a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250604080516020808e02820181019092528c81528f955093508c92508b91829185015b828210156105b4576105a560a0830286013681900381019061342b565b81526020019060010190610588565b5050505050612479565b505098975050505050505050565b600061037985858585612710565b60608342811015610617576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613d1a565b600061064a7f00000000000000000000000000000000000000000000000000000000000000008a8a60008181106103fb57fe5b905060608989808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509293508e92506106b391507f000000000000000000000000000000000000000000000000000000000000000090508284612809565b94508b856001875103815181106106c657fe5b60200260200101511015610706576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613dae565b50506107188989600081811061050257fe5b6105be838a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250604080516020808e02820181019092528c81528f955093508c92508b91829185015b828210156105b45761078a60a0830286013681900381019061342b565b8152602001906001019061076d565b82428110156107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613d1a565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001687877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810181811061083957fe5b905060200201602081019061084e91906133ed565b73ffffffffffffffffffffffffffffffffffffffff161461089b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf906139d9565b61091a878760008181106108ab57fe5b90506020020160208101906108c091906133ed565b336109147f00000000000000000000000000000000000000000000000000000000000000008b8b60008181106108f257fe5b905060200201602081019061090791906133ed565b8c8c600181811061041d57fe5b8c61234c565b6109a48787808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250604080516020808b028201810190925289815230955093508992508891829185015b8282101561099a5761098b60a0830286013681900381019061342b565b8152602001906001019061096e565b505050505061294c565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610a19903090600401613889565b60206040518083038186803b158015610a3157600080fd5b505afa158015610a45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6991906134e5565b905088811015610aa5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613dae565b6040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90610b17908490600401613e0b565b600060405180830381600087803b158015610b3157600080fd5b505af1158015610b45573d6000803e3d6000fd5b50505050610b538682612de6565b50505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610b90848484612e9f565b949350505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60608342811015610bf9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613d1a565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001688887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101818110610c5e57fe5b9050602002016020810190610c7391906133ed565b73ffffffffffffffffffffffffffffffffffffffff1614610cc0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf906139d9565b6000610cf37f00000000000000000000000000000000000000000000000000000000000000008a8a60008181106103fb57fe5b905060608989808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509293508e9250610d5c91507f000000000000000000000000000000000000000000000000000000000000000090508284612022565b94508b85600081518110610d6c57fe5b60200260200101511115610dac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613c86565b5050610dbe8989600081811061050257fe5b610e3f838a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250604080516020808e02820181019092528c815230955093508c92508b91829185015b828210156105b457610e3060a0830286013681900381019061342b565b81526020019060010190610e13565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16632e1a7d4d84600186510381518110610e8b57fe5b60200260200101516040518263ffffffff1660e01b8152600401610eaf9190613e0b565b600060405180830381600087803b158015610ec957600080fd5b505af1158015610edd573d6000803e3d6000fd5b505050506105be8784600186510381518110610ef557fe5b6020026020010151612de6565b60608342811015610f3f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613d1a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1688886000818110610f8357fe5b9050602002016020810190610f9891906133ed565b73ffffffffffffffffffffffffffffffffffffffff1614610fe5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf906139d9565b60006110187f00000000000000000000000000000000000000000000000000000000000000008a8a60008181106103fb57fe5b9050606089898080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092935061108092507f0000000000000000000000000000000000000000000000000000000000000000915034905083612809565b93508a8460018651038151811061109357fe5b602002602001015110156110d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613dae565b507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db08460008151811061111d57fe5b60200260200101516040518263ffffffff1660e01b81526004016000604051808303818588803b15801561115057600080fd5b505af1158015611164573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb82856000815181106111b357fe5b60200260200101516040518363ffffffff1660e01b81526004016111d89291906138db565b602060405180830381600087803b1580156111f257600080fd5b505af1158015611206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061122a9190613408565b61123057fe5b6112b1838a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250604080516020808e02820181019092528c81528f955093508c92508b91829185015b828210156105b4576112a260a0830286013681900381019061342b565b81526020019060010190611285565b5050979650505050505050565b60606103627f00000000000000000000000000000000000000000000000000000000000000008484612809565b8242811015611326576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613d1a565b611336878760008181106108ab57fe5b600087877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810181811061136657fe5b905060200201602081019061137b91906133ed565b73ffffffffffffffffffffffffffffffffffffffff166370a08231876040518263ffffffff1660e01b81526004016113b39190613889565b60206040518083038186803b1580156113cb57600080fd5b505afa1580156113df573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140391906134e5565b90506114858888808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250604080516020808c02820181019092528a81528d955093508a92508991829185015b8282101561099a5761147660a0830286013681900381019061342b565b81526020019060010190611459565b88611561828a8a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81018181106114b857fe5b90506020020160208101906114cd91906133ed565b73ffffffffffffffffffffffffffffffffffffffff166370a082318a6040518263ffffffff1660e01b81526004016115059190613889565b60206040518083038186803b15801561151d57600080fd5b505afa158015611531573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155591906134e5565b9063ffffffff612f4116565b1015610b53576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613dae565b82428110156115d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613d1a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168787600081811061161857fe5b905060200201602081019061162d91906133ed565b73ffffffffffffffffffffffffffffffffffffffff161461167a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf906139d9565b60003490507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156116e757600080fd5b505af11580156116fb573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb61176d7f00000000000000000000000000000000000000000000000000000000000000008b8b60008181106108f257fe5b836040518363ffffffff1660e01b815260040161178b9291906138db565b602060405180830381600087803b1580156117a557600080fd5b505af11580156117b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117dd9190613408565b6117e357fe5b600088887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810181811061181357fe5b905060200201602081019061182891906133ed565b73ffffffffffffffffffffffffffffffffffffffff166370a08231886040518263ffffffff1660e01b81526004016118609190613889565b60206040518083038186803b15801561187857600080fd5b505afa15801561188c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b091906134e5565b90506119328989808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250604080516020808d02820181019092528b81528e955093508b92508a91829185015b8282101561099a5761192360a0830286013681900381019061342b565b81526020019060010190611906565b89611561828b8b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810181811061196557fe5b905060200201602081019061197a91906133ed565b73ffffffffffffffffffffffffffffffffffffffff166370a082318b6040518263ffffffff1660e01b81526004016115059190613889565b606083428110156119ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613d1a565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1688886000818110611a3357fe5b9050602002016020810190611a4891906133ed565b73ffffffffffffffffffffffffffffffffffffffff1614611a95576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf906139d9565b6000611ac87f00000000000000000000000000000000000000000000000000000000000000008a8a60008181106103fb57fe5b905060608989808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509293508d9250611b3191507f000000000000000000000000000000000000000000000000000000000000000090508284612022565b94503485600081518110611b4157fe5b60200260200101511115611b81576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613c86565b50507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d0e30db084600081518110611bcc57fe5b60200260200101516040518263ffffffff1660e01b81526004016000604051808303818588803b158015611bff57600080fd5b505af1158015611c13573d6000803e3d6000fd5b50505050507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8285600081518110611c6257fe5b60200260200101516040518363ffffffff1660e01b8152600401611c879291906138db565b602060405180830381600087803b158015611ca157600080fd5b505af1158015611cb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cd99190613408565b611cdf57fe5b611d60838a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250604080516020808e02820181019092528c81528f955093508c92508b91829185015b828210156105b457611d5160a0830286013681900381019061342b565b81526020019060010190611d34565b82600081518110611d6d57fe5b60200260200101513411156112b1576112b13384600081518110611d8d57fe5b60200260200101513403612de6565b60608342811015611dd9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613d1a565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001688887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101818110611e3e57fe5b9050602002016020810190611e5391906133ed565b73ffffffffffffffffffffffffffffffffffffffff1614611ea0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf906139d9565b6000611ed37f00000000000000000000000000000000000000000000000000000000000000008a8a60008181106103fb57fe5b905060608989808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509293508e9250611f3c91507f000000000000000000000000000000000000000000000000000000000000000090508284612809565b94508b85600187510381518110611f4f57fe5b60200260200101511015611f8f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613dae565b5050611fa18989600081811061050257fe5b610e3f838a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250604080516020808e02820181019092528c815230955093508c92508b91829185015b828210156105b45761201360a0830286013681900381019061342b565b81526020019060010190611ff6565b6060600282511015612060576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613ce3565b815167ffffffffffffffff8111801561207857600080fd5b506040519080825280602002602001820160405280156120a2578160200160208202803683370190505b50905082816001835103815181106120b657fe5b602090810291909101015281517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff015b80156121bc576000806121238786600186038151811061210257fe5b602002602001015187868151811061211657fe5b6020026020010151612f7e565b9150915061217984848151811061213657fe5b602002602001015183836121748b8a60018a038151811061215357fe5b60200260200101518b8a8151811061216757fe5b602002602001015161308c565b612710565b84600185038151811061218857fe5b602090810291909101015250507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016120e6565b509392505050565b60008085116121ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613d51565b60008411801561220f5750600083115b612245576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613bcc565b600061226c83612257576103e561225b565b6103de5b879061ffff1663ffffffff61311616565b90506000612280828663ffffffff61311616565b905060006122a68361229a896103e863ffffffff61311616565b9063ffffffff61316716565b90508082816122b157fe5b0498975050505050505050565b60008060006122cd85856131a4565b915091508582826040516020016122e59291906137b2565b6040516020818303038152906040528051906020012060405160200161230c929190613808565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905280516020909101209695505050505050565b600060608573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401612381939291906138aa565b6040516020818303038152906040529060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516123cf91906137ec565b6000604051808303816000865af19150503d806000811461240c576040519150601f19603f3d011682016040523d82523d6000602084013e612411565b606091505b509150915081801561243b57508051158061243b57508080602001905181019061243b9190613408565b612471576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613ab5565b505050505050565b60005b60018451038110156127095760008085838151811061249757fe5b60200260200101518684600101815181106124ae57fe5b60200260200101519150915060006124c683836131a4565b50905060008885600101815181106124da57fe5b602002602001015190506000808373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161461252257826000612526565b6000835b91509150600060028b5103881061253d578961257e565b61257e7f0000000000000000000000000000000000000000000000000000000000000000878d8b6002018151811061257157fe5b60200260200101516122be565b905086612589613316565b612591613316565b8b8b8151811061259d57fe5b60200260200101518c8c600101815181106125b457fe5b6020026020010151915091506125eb7f0000000000000000000000000000000000000000000000000000000000000000848b6122be565b73ffffffffffffffffffffffffffffffffffffffff1663e06a041f87878760006040519080825280601f01601f191660200182016040528015612635576020820181803683370190505b506126a18e73ffffffffffffffffffffffffffffffffffffffff168a73ffffffffffffffffffffffffffffffffffffffff16146126865760405180604001604052808981526020018a81525061269c565b60405180604001604052808a8152602001898152505b6132a3565b6040518663ffffffff1660e01b81526004016126c1959493929190613e14565b600060405180830381600087803b1580156126db57600080fd5b505af11580156126ef573d6000803e3d6000fd5b50506001909c019b5061247c9a5050505050505050505050565b5050505050565b600080851161274b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613b6f565b60008411801561275b5750600083115b612791576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613bcc565b60006127b56103e86127a9878963ffffffff61311616565b9063ffffffff61311616565b905060006127e1846127c9576103e56127cd565b6103de5b61ffff166127a9878a63ffffffff612f4116565b90506127fe60018284816127f157fe5b049063ffffffff61316716565b979650505050505050565b6060600282511015612847576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613ce3565b815167ffffffffffffffff8111801561285f57600080fd5b50604051908082528060200260200182016040528015612889578160200160208202803683370190505b509050828160008151811061289a57fe5b60200260200101818152505060005b60018351038110156121bc576000806128df878685815181106128c857fe5b602002602001015187866001018151811061211657fe5b915091506129288484815181106128f257fe5b602002602001015183836129238b8a898151811061290c57fe5b60200260200101518b8a6001018151811061216757fe5b6121c4565b84846001018151811061293757fe5b602090810291909101015250506001016128a9565b60005b6001845103811015612de05760006129a47f000000000000000000000000000000000000000000000000000000000000000086848151811061298d57fe5b602002602001015187856001018151811061257157fe5b90506000806000808886815181106129b857fe5b60200260200101518987600101815181106129cf57fe5b60200260200101519150915060006129e783836131a4565b5090506000808773ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015612a3357600080fd5b505afa158015612a47573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a6b9190613491565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691506000808473ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614612acd578284612ad0565b83835b91509150612b11828873ffffffffffffffffffffffffffffffffffffffff166370a082318d6040518263ffffffff1660e01b81526004016115059190613889565b9850612b978983838d73ffffffffffffffffffffffffffffffffffffffff16632f3e66576040518163ffffffff1660e01b815260040160206040518083038186803b158015612b5f57600080fd5b505afa158015612b73573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906129239190613408565b9750505050505050506000806060808a90506060899050612bb6613316565b612bbe613316565b828b81518110612bca57fe5b6020026020010151838c60010181518110612be157fe5b602002602001015191509150600080858d81518110612bfc57fe5b6020026020010151868e60010181518110612c1357fe5b6020026020010151915091506000612c2b83836131a4565b5090508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612c69578a6000612c6d565b60008b5b909a509850612cc973ffffffffffffffffffffffffffffffffffffffff84811690831614612caf5760405180604001604052808681526020018781525061269c565b6040518060400160405280878152602001868152506132a3565b97505050505050505060608a90508673ffffffffffffffffffffffffffffffffffffffff1663e06a041f858560028551038c10612d06578d612d50565b612d507f0000000000000000000000000000000000000000000000000000000000000000868e60010181518110612d3957fe5b6020026020010151878f6002018151811061257157fe5b604080516000815260208101918290527fffffffff0000000000000000000000000000000000000000000000000000000060e087901b16909152612d9b939291908860248201613e14565b600060405180830381600087803b158015612db557600080fd5b505af1158015612dc9573d6000803e3d6000fd5b50506001909901985061294f975050505050505050565b50505050565b6040805160008082526020820190925273ffffffffffffffffffffffffffffffffffffffff8416908390604051612e1d91906137ec565b60006040518083038185875af1925050503d8060008114612e5a576040519150601f19603f3d011682016040523d82523d6000602084013e612e5f565b606091505b5050905080612e9a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613b12565b505050565b6000808411612eda576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613c29565b600083118015612eea5750600082115b612f20576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613bcc565b82612f31858463ffffffff61311616565b81612f3857fe5b04949350505050565b80820382811115610365576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf906139a2565b6000806000612f8d85856131a4565b509050600080612f9e8888886122be565b73ffffffffffffffffffffffffffffffffffffffff16630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015612fe357600080fd5b505afa158015612ff7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061301b9190613491565b506dffffffffffffffffffffffffffff1691506dffffffffffffffffffffffffffff1691508273ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461307a57808261307d565b81815b90999098509650505050505050565b60006130998484846122be565b73ffffffffffffffffffffffffffffffffffffffff16632f3e66576040518163ffffffff1660e01b815260040160206040518083038186803b1580156130de57600080fd5b505afa1580156130f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b909190613408565b60008115806131315750508082028282828161312e57fe5b04145b610365576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613a10565b80820182811015610365576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613a7e565b6000808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561320d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613945565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161061324757828461324a565b83835b909250905073ffffffffffffffffffffffffffffffffffffffff821661329c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bf90613a47565b9250929050565b6040805160028082526060828101909352816020015b6132c1613316565b8152602001906001900390816132b9575050825181519192509082906000906132e657fe5b602090810291909101015281600160200201518160018151811061330657fe5b6020026020010181905250919050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b803573ffffffffffffffffffffffffffffffffffffffff8116811461036557600080fd5b60008083601f840112613379578182fd5b50813567ffffffffffffffff811115613390578182fd5b602083019150836020808302850101111561329c57600080fd5b60008083601f8401126133bb578182fd5b50813567ffffffffffffffff8111156133d2578182fd5b60208301915083602060a08302850101111561329c57600080fd5b6000602082840312156133fe578081fd5b6103628383613344565b600060208284031215613419578081fd5b815161342481613f2d565b9392505050565b600060a0828403121561343c578081fd5b61344660a0613eda565b6134508484613344565b815260208301356020820152604083013560ff8116811461346f578283fd5b6040820152606083810135908201526080928301359281019290925250919050565b6000806000606084860312156134a5578182fd5b83516134b081613f3e565b60208501519093506134c181613f3e565b604085015190925063ffffffff811681146134da578182fd5b809150509250925092565b6000602082840312156134f6578081fd5b5051919050565b600080600080600080600060a0888a031215613517578283fd5b87359650602088013567ffffffffffffffff80821115613535578485fd5b6135418b838c01613368565b909850965060408a0135915073ffffffffffffffffffffffffffffffffffffffff8216821461356e578485fd5b909450606089013593506080890135908082111561358a578384fd5b506135978a828b016133aa565b989b979a50959850939692959293505050565b600080604083850312156135bc578182fd5b8235915060208084013567ffffffffffffffff808211156135db578384fd5b81860187601f8201126135ec578485fd5b80359250818311156135fc578485fd5b838302915061360c848301613eda565b8381528481019082860184840187018b1015613626578788fd5b8794505b858510156136505761363c8b82613344565b83526001949094019391860191860161362a565b508096505050505050509250929050565b60008060008060008060008060c0898b03121561367c578081fd5b8835975060208901359650604089013567ffffffffffffffff808211156136a1578283fd5b6136ad8c838d01613368565b90985096506136bf8c60608d01613344565b955060808b0135945060a08b01359150808211156136db578283fd5b506136e88b828c016133aa565b999c989b5096995094979396929594505050565b600080600060608486031215613710578283fd5b505081359360208301359350604090920135919050565b6000806000806080858703121561373c578182fd5b843593506020850135925060408501359150606085013561375c81613f2d565b939692955090935050565b805173ffffffffffffffffffffffffffffffffffffffff1682526020808201519083015260408082015160ff1690830152606080820151908301526080908101519082015260a00190565b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000606093841b811682529190921b16601482015260280190565b600082516137fe818460208701613f01565b9190910192915050565b7fff00000000000000000000000000000000000000000000000000000000000000815260609290921b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016600183015260158201527f972504bfd3259d3d8e5fc9fed5ec2ea5a969144c60dc7b3c0fd7091f7f40f435603582015260550190565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9384168152919092166020820152604081019190915260600190565b73ffffffffffffffffffffffffffffffffffffffff929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156139395783518352928401929184019160010161391d565b50909695505050505050565b60208082526021908201527f49787356324c6962726172793a204944454e544943414c5f414444524553534560408201527f5300000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526015908201527f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000604082015260600190565b60208082526019908201527f4978735632526f757465723a20494e56414c49445f5041544800000000000000604082015260600190565b60208082526014908201527f64732d6d6174682d6d756c2d6f766572666c6f77000000000000000000000000604082015260600190565b6020808252601a908201527f49787356324c6962726172793a205a45524f5f41444452455353000000000000604082015260600190565b60208082526014908201527f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000604082015260600190565b60208082526031908201527f5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a20747260408201527f616e7366657246726f6d206661696c6564000000000000000000000000000000606082015260800190565b60208082526034908201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60408201527f20455448207472616e73666572206661696c6564000000000000000000000000606082015260800190565b60208082526028908201527f49787356324c6962726172793a20494e53554646494349454e545f4f5554505560408201527f545f414d4f554e54000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f49787356324c6962726172793a20494e53554646494349454e545f4c4951554960408201527f4449545900000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f49787356324c6962726172793a20494e53554646494349454e545f414d4f554e60408201527f5400000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526023908201527f4978735632526f757465723a204558434553534956455f494e5055545f414d4f60408201527f554e540000000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601a908201527f49787356324c6962726172793a20494e56414c49445f50415448000000000000604082015260600190565b60208082526014908201527f4978735632526f757465723a2045585049524544000000000000000000000000604082015260600190565b60208082526027908201527f49787356324c6962726172793a20494e53554646494349454e545f494e50555460408201527f5f414d4f554e5400000000000000000000000000000000000000000000000000606082015260800190565b60208082526027908201527f4978735632526f757465723a20494e53554646494349454e545f4f555450555460408201527f5f414d4f554e5400000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b60008682526020868184015273ffffffffffffffffffffffffffffffffffffffff8616604084015260a0606084015284518060a0850152613e5b8160c08601848901613f01565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016830183810360c0908101608086015285519101908190613ea08183613e0b565b91508387019250845b81811015613eca57613ebc838551613767565b938501939250600101613ea9565b50909a9950505050505050505050565b60405181810167ffffffffffffffff81118282101715613ef957600080fd5b604052919050565b60005b83811015613f1c578181015183820152602001613f04565b83811115612de05750506000910152565b8015158114613f3b57600080fd5b50565b6dffffffffffffffffffffffffffff81168114613f3b57600080fdfea2646970667358221220f685875ac289cf14adaa13888c097aef319ff3da2b277713124b90858fccb9e264736f6c63430006060033'

export class IxsV2SwapRouter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0])
    } else {
      super(...args)
    }
  }

  deploy(
    _factory: string,
    _WETH: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<IxsV2SwapRouter> {
    return super.deploy(
      _factory,
      _WETH,
      overrides || {}
    ) as Promise<IxsV2SwapRouter>
  }
  getDeployTransaction(
    _factory: string,
    _WETH: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_factory, _WETH, overrides || {})
  }
  attach(address: string): IxsV2SwapRouter {
    return super.attach(address) as IxsV2SwapRouter
  }
  connect(signer: Signer): IxsV2SwapRouter__factory {
    return super.connect(signer) as IxsV2SwapRouter__factory
  }
  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): IxsV2SwapRouterInterface {
    return new utils.Interface(_abi) as IxsV2SwapRouterInterface
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IxsV2SwapRouter {
    return new Contract(address, _abi, signerOrProvider) as IxsV2SwapRouter
  }
}
