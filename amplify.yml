version: 0.1
resources:
  build:
    spec: {
      "size": "BUILD_GENERAL1_MEDIUM"
    }
frontend:
  phases:
    preBuild:
      commands:
        - nvm use $VERSION_NODE_20
        - node -v
        - echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > .npmrc
        - cat .npmrc
        - |
          if [ "${AWS_BRANCH}" = "main" ]; then
            echo "Fetching parameters from AWS Parameter Store for the main branch";
            aws ssm get-parameter --name ${PARAMETER_STORE_PROD} --with-decryption --query "Parameter.Value" --output text > .env.production;
          fi
        - yarn install
          # add a single comment
    build:
      commands:
        - if [ "${AWS_BRANCH}" = "development" ]; then cp -fv .env.development .env.production; fi
        - if [ "${AWS_BRANCH}" = "investax-dev" ]; then cp -fv .env.development .env.production; fi
        - if [ "${AWS_BRANCH}" = "staging" ]; then cp -fv .env.staging .env.production; fi
        - if [ "${AWS_BRANCH}" = "staging" ]; then cp -fv .env.staging .env.test; fi
        - if [ "${AWS_BRANCH}" = "clientspace" ]; then cp -fv .env.staging .env.production; fi
        - if [ "${AWS_BRANCH}" = "clientspace" ]; then cp -fv .env.staging .env.test; fi
        - if [ "${AWS_BRANCH}" = "staging-client-demo" ]; then cp -fv .env.staging-client-demo .env.production; fi
        - if [ "${AWS_BRANCH}" = "staging-client-demo" ]; then cp -fv .env.staging-client-demo .env.test; fi
        - if [ "${AWS_BRANCH}" = "upgrade-wallet-connect" ]; then cp -fv .env.staging-client-demo .env.production; fi
        - if [ "${AWS_BRANCH}" = "upgrade-wallet-connect" ]; then cp -fv .env.staging-client-demo .env.test; fi
        - node -v
        - yarn run build
  artifacts:
    baseDirectory: build
    files:
      - '**/*'
  cache:
    paths:
      - node_modules/**/*
